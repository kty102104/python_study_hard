# print("Hello, Python!")

# 주석(comment) : 사람이 읽도록 정보 제공, 코드로 인지X

# python : C언어 기반. 영어로 쉽게 프로그램 작성 -> 확장성이 높아져 빅데이터, AI, 알고리즘 등을 파이썬으로 구동

# 그냥 작성을 하다가 주석처리 하는경우 -> ctrl + /

'''
다중 주석 처리

위에서 배운 것은 print()
큰따옴표는 출력되지 않음
'''

# print(1)
# print("1")

'''
두 라인의 출력 결과가 동일하기 때문에 구분이 어려움
type() 함수 필수적
'''

# print(type(1))  # ctrl + d
# print(type("1"))

# type에 따른 차이 검증

# print(1 + 2)  # 결과값 3
# print("1" + "2") # 결과값 12
# print(2 + 1) # 결과값 3
# print("2" + "1") # 결과값 21

'''
산술 연산자

+ : 더하기
- : 빼기
* : 곱하기
/ : 나누기
% : 나머지
여기까진 다른 언어에서도 쓰임
// : 몫
** : 제곱
'''

# print(3 / 2)      # 결과값 1.5
# print(3 // 2)     # 결과값 1
# print(type(3/2))  # float -> 실수
# print(type(3//2)) # int

'''
변수(variable) : 데이터(정보)를 담는 바구니

데이터는 자료형에 따라 결정
bool : 참/거짓     (boolean의 축약어)
int : 정수
float : 실수
string : 문자열
'''

#
'''
대입 연산자
1. = : = 오른쪽에 있는 데이터를 = 왼쪽에 있는 변수에 대입한다는 의미
'''

# num = 1
# print(num)
# num = num + 1
# print(num)

'''
그렇다면 동일하다는 의미를 지니 기호는? -> ===
다중 string : 변수명 = 한 후에 작은 따옴표 세개를 입력하면 자동으로 여섯개가 나온다
세개 후에 내용을 입력하면 다중 string 적용
'''

# introduction = '''
# 안녕하세요 제 이름은 안근수입니다.'''

# print(introduction)
# name = "안근수"
# job = "코리아it 파이썬 강사"
# age = 37
#
# print(f"제 이름은 {name}이고, 직업은 {job}입니다. 나이는 {age}살입니다. 내년에는 {age+1}살이 됩니다.")

'''
지금까지 수업한 방식으로는 미리 데이터를 준비해놓고 변수에 대입을 합니다.
즉 실시간으로 데이터를 입력할 수 없다

이 문제를 해결하기 위한 방법이 input() 함수입니다.
'''
# input("당신의 이름이 무엇입니까? >>> ")

'''
위와 같이 입력하면 콘솔창에 이름을 입력할 수 있도록 커서가 깜빡인다
커서가 깜빡이는 곳에 이름을 입력하면 종료가 되어버린다.

즉 데이터를 입력 받기는 했지만 변수에 저장하는 과정이 없었기 때문에 데이터가 휘발됨
그렇다면 이름을 변수에 저장하기 위해서는 변수의 개념과 대입 연산자의 개념을 알고 있어야 한다.
'''

# name = input("당신의 이름이 무엇입니까? >>> ")
# print(f"제 이름은 {name}입니다.")

'''
105번의 코드 라인을 분석해보자. input()함수는 ()안에 있는 질문사항(프롬프트라고 보통 말함)을 콘솔에 출력하여
사용자로 하여금 입력받을 수 있게끔 한다.
사용자가 프롬프트에 맞는 정보를 입력하면, 그 데이터는 name 변수에 저장이 되고,
이를 print(name)을 통해 다시 불러올 수 있다)
'''

# age = 37
# print("제 이름은 안근수입니다. 나이는" + age + "살입니다.") -> 오류 발생
'''
f-string(formatted string) : f""로 실행하며 큰 따옴표 내에 정보를 작성하다가 특정한 변수를 불러낼 때는 {}를 사용함.
'''
# print(f"제 이름은 안근수입니다. 제 나이는 {age}살입니다.")